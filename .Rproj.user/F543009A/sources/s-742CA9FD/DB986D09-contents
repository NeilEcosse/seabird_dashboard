---
output:
  html_document:
    code_folding: hide
  html_notebook: default
  pdf_document: default
---

```{r, warning = F, message = F}
library(readxl)
library(tidyverse)
library(dplyr)
library(here)
library(leaflet)

```


```{r, warning = F, message = F}
# Read in data

bird_data_by_record_id_clean <-
read_csv(here("data_clean/bird_data_by_record_id_clean.csv"))

ship_data_by_record_id_clean <-
read_csv(here("data_clean/ship_data_by_record_id_clean.csv"))

bird_data_codes_clean <-
read_csv(here("data_clean/bird_data_codes_clean.csv"))

ship_data_codes_clean <-
read_csv(here("data_clean/ship_data_codes_clean.csv"))
```


```{r, warning = F, message = F}

# Join observation & species data

data_by_year_and_ship_activity  <-
  bird_data_by_record_id_clean %>%
  left_join(ship_data_by_record_id_clean, by = "record_id")  %>%
select(record_id,
        species_common_name,
        species_scientific_name,
        species_abbreviation,
        count,
        age,
        sact,
        date,
        lat,
        long,
        seasn) %>%
        mutate(year = substring(date,1,4)) %>% 
         mutate(
           ship_activity = case_when(
             is.na(sact) ~ "Not recorded",
             sact == 1 ~ "steaming, sailing",
             sact == 2 ~ "dropping trash",
             sact == 3 ~ "trawling",
             sact == 4 ~ "oceanography",
             sact == 5 ~ "potting",
             sact == 6 ~ "line fishing",
             sact == 7 ~ "cleaning fish",
             sact == 8 ~ "stationary",
             sact == 9 ~ "flying helicopters",
             sact == 10 ~ "whaling",
             TRUE       ~ "error - please check record"
           )
         ) 
```


```{r, warning = F, message = F}
# Create map inputs

observation_locations <- data_by_year_and_ship_activity %>% 
  filter(species_common_name == "Short-tailed shearwater") %>% 
  filter(year == 1985) %>% 
  group_by(species_common_name, lat, long) %>% 
  summarise(number_of_individuals = sum(count)) %>% 
  arrange(desc(number_of_individuals))


# Create colour scheme for markers based on number of individuals
observation_locations <- observation_locations %>% 
  mutate(observations_group = cut(number_of_individuals, breaks = c(0, 10, 100, 500, 1000, Inf),
          labels = c("orange", "light yellow","darkred", "red", "purple"),
                 include.lowest = TRUE)) 

icons <- awesomeIcons(icon = "whatever",
                      iconColor = "black",
                      library = "ion",
                      markerColor = observation_locations$observations_group)


# Data for leaflet
observation_data_map <- observation_locations %>% 
  leaflet() %>% 
  addTiles() %>% 
  addAwesomeMarkers(lng = ~ observation_locations$long, 
             lat = ~ observation_locations$lat,
             icon = icons,
             popup = paste("Count:",as.character(observation_locations$number_of_individuals))
               
              
  )
observation_data_map
```

```{r, warning = F, message = F}
data_by_year_and_ship_activity %>% 
  filter(!is.na(year)) %>% 
  group_by(year) %>% 
  summarise(number_of_individuals = sum(count)) %>% 
ggplot() +
  aes(x = year, y = number_of_individuals) +
  geom_col(fill = "steel blue") +
  scale_y_continuous(labels = scales::comma)
```

